$ npm init -y
$ npm i react react-dom next mobx mobx-react

// update package.json
{
  "scripts": {
    "dev": "next",
    "build": "next build",
    "start": "next start"
  }
}


// decorator 사용가능
// decorate? 또는 observable? 로 상태 변화 안되던 부분도 이거로 해결됨(decorate 할 떄 class-properties 부분 연관일듯)
$ npm i @babel/plugin-proposal-decorators @babel/plugin-proposal-class-properties
// [.babelrc]
{
  "presets": ["next/babel"],
  "plugins": [
    ["@babel/plugin-proposal-decorators", { "legacy": true }],
    ["@babel/plugin-proposal-class-properties", { "loose": true }]
  ]
}


// jest-dom node -v 8이상 // -D == --save-dev
npm i -D jest
npm i -D @testing-library/react @testing-library/jest-dom

// https://github.com/mobxjs/mobx-react-devtoolshttps://github.com/mobxjs/mobx-react-devtools
npm i -D mobx-react-devtools


// package.json
"scripts": {
  "dev": "next",
  "build": "next build",
  "start": "next start",
  "test": "jest -c jest.config.js --watchAll"
},

// [jest.config.js]
module.export = {
  roots: ['<rootDir>/src'],
  transform: {
    '\\.(js|jsx)?$': 'babel-jest',
  },
  testMatch: ['<rootDir>/test/**/>(*.)test.{js, jsx}'], // finds test
  moduleFileExtensions: ['js', 'jsx', 'json', 'node'],
  testPathIgnorePatterns: ['/node_modules/', '/public/'],
  setupFilesAfterEnv: [
    '@testing-library/jest-dom/extend-expect',
    '@testing-library/react/cleanup-after-each'
  ] // setupFiles before the tests are ran
}

// npm 을 통한 명령어 실행중 ejsonparse 에러
// package.json 에 불필요한 , 확인 혹은 그외 오타 등 확인




// ts
npm install -D typescript @types/node
// tsx 파일 만들고 dev 실행시 tsconfig.json, next-env.d.ts 자동 생성


